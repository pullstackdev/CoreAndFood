@model CoreAndFood.Data.Models.Food
@{
    ViewData["Title"] = "UpdateFood";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Update Food</h3>
<br />

@using (Html.BeginForm("UpdateFood", "Food", FormMethod.Post))
{
    @Html.LabelFor(x => x.FoodID)
    @Html.TextBoxFor(x => x.FoodID, new { @class = "form-control", @readonly = "@readonly" })
    <br />
    @Html.LabelFor(x => x.Name)
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })//x.Name name gibi aynı isimli olmalı modeldeki ile
    @Html.ValidationMessageFor(x => x.Name, "", new { @style = "color:red" }) //gelecek olan error buraya bu style ile yazılır ve CategoryName için kontrol edilir. boş bırakılan alan default yazı yazar
    <br />
    @Html.LabelFor(x => x.Category)
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.categories, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.Price)
    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.Stock)
    @Html.TextBoxFor(x => x.Stock, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.Description)
    @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
    <br />
    <button class="btn btn-info">Update</button>
}

